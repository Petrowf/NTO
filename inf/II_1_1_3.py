"""
Задача II.1.1.3. Две строки (15 баллов)
Темы: строки, структуры данных.
Условие
У Алисы и Боба есть секретная информация, которая записана в виде строки s.
Чтобы сохранить секрет Алиса сделала перестановку символов в строке по следую-
щему правилу. Она записала все символы строки по кругу, потом записала в ответ
первый символ и далее стала выписывать символы из кольца через два.
Рассмотрим пример. Пусть секретная строка — AliceLovesBob. Алиса запишет
эту строку, как показано на рисунке. Далее она выпишет первую букву строки A,
пропустит два следующих символа, напишет букву c, пропустит еще два символа,
напишет букву o и так далее по кругу. В результате у нее будет записана строка
AcosbiLeolevB . Номера на рисунке слева соответствуют последовательности перечис-
ления букв Алисой.
Боб шифрует эту же строку таким же алгоритмом, однако, в отличие от Алисы,
он пропускает по четыре буквы, а не по две. Номера на рисунке справа соответствуют
последовательности перечисления букв Бобом. Таким образом Боб получит строку
ALBivbeslooce.
Боб был небрежен и потерял зашифрованную строку, однако у него есть строка,
зашифрованная Алисой. Напишете программу, которая по зашифрованной строке
Алисы найдет зашифрованную строку Боба.

Формат входных данных
На вход подается одна непустая строка — шифр Алисы. Строка состоит только
из строчных и заглавных символов латиницы. Длина строки не превосходит 1000 и
не кратна трем и пяти.

Формат выходных данных
Выведите одну строку — шифр Боба.
"""

#AcosbiLeolevB
#AliceLovesBob

alice_cipher = input() # Ввод шифра
step = 9 # Шаг между буквами
decrypted_alice = '' # Строка под расшифрованное сообщения

# Декодирование Алисы
i = 0 # Первая буква шифра равна первой букве сообщения
while len(decrypted_alice) != len(alice_cipher):
    decrypted_alice += alice_cipher[i]
    i = (i + 9) % len(alice_cipher)

# Код Боба
bob_cipher = ''
j = 0
while len(bob_cipher) != len(decrypted_alice):
    bob_cipher += decrypted_alice[j]
    j = (j + 5) % len(decrypted_alice)

print(bob_cipher)